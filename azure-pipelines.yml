# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
    
pool:
  vmImage: 'ubuntu-latest'

variables:
  system.debug: false

steps:

 - task: DotNetCoreCLI@2
   inputs:
     command: 'build'
     projects: '**/*.csproj'

 - task: NodeTool@0
   inputs:    
      versionSpec: '10.x'
      
 - script:
    npm install @angular/cli@8.3.14  -g
   workingDirectory: 'UI/bcs-frontend'

 - script:
        npm install
   workingDirectory: 'UI/bcs-frontend'

 - script: |
        echo NG VERSION:
        npm run ng --version
        npm uninstall @angular-devkit/build-angular
        npm install @angular-devkit/build-angular
        npm uninstall typescript
        npm install typescript@3.5.1
        echo NG VERSION AFTER UPDATE:
        npm run ng --version
   workingDirectory: 'UI/bcs-frontend'

 - script:  
      ng build 
   displayName: 'ng build'
   workingDirectory: UI/bcs-frontend

 - task: PublishBuildArtifacts@1
   inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'app'
    publishLocation: 'Container'
    
#- task: Npm@1
#  inputs:
#    command: 'install'
#    workingDir: 'UI/bcs-frontend'

#- task: CmdLine@2
#  inputs:
#    script: |
#      echo yolo
#      npm install
#      echo done
#    workingDirectory: 'UI/bcs-frontend'

#- task: Npm@1
#  inputs:
#    command: 'custom'
#    workingDir: 'UI/bcs-frontend'
#    customCommand: 'install @angular/cli'



#- task: Npm@1
#  inputs:
#    command: 'custom'
#    workingDir: 'UI/bcs-frontend'
#    customCommand: 'run build'

#- task: CmdLine@2
#  inputs:
#    script: |
#      echo install complete...now build the app
#      ng build
#      echo done
#    workingDirectory: 'UI/bcs-frontend'
